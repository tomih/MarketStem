FORMAT: 1A
HOST: wss://pubsub.pubnub.com//sub-c-500b2f78-c7a5-11e3-ab7b-02ee2ddab7fe/

# marketstem
MarketStem joins market data from several digital asset exchanges into one convenient streaming API.

##Supported Exchanges
<a href="https://anxpro.com/" target="_blank">ANXPRO</a>,
<a href="https://www.bitstamp.net/" target="_blank">BITSTAMP</a>,
<a href="https://www.bitfinex.com/" target="_blank">BITFINEX</a>,
<a href="https://btc-e.com/" target="_blank">BTCE</a>,
<a href="https://vip.btcchina.com/" target="_blank">BTCHINA</a>,
<a href="https://bter.com/" target="_blank">BTER</a>,
<a href="https://campbx.com/" target="_blank">CAMPBX</a>,
<a href="https://cex.io/" target="_blank">CEXIO</a>,
<a href="https://coinbase.com/" target="_blank">COINBASE</a>,
<a href="https://crypto-trade.com/" target="_blank">CRYPTOTRADE</a>,
<a href="https://justcoin.com/" target="_blank">JUSTCOIN</a>,
<a href="https://www.kraken.com/" target="_blank">KRAKEN</a>,
<a href="https://www.vaultofsatoshi.com/" target="_blank">VAULTOFSATOSHI</a>

##Connecting
This is a streaming web-socket API hosted by PubNub.  For detailed documentation about how to connect with one of their many client libraries please <a href="http://www.pubnub.com/developers" target="_blank">visit pubnub</a>.  Or try out the <a href="http://www.pubnub.com/console/?channel=ticker.KRAKEN&origin=pubsub.pubnub.com&sub=sub-c-500b2f78-c7a5-11e3-ab7b-02ee2ddab7fe&pub=&cipher=&ssl=false" target="_blank">dev console</a> to quickly visualize the live data.

 **PubNub Subscription Key:** sub-c-500b2f78-c7a5-11e3-ab7b-02ee2ddab7fe

##Terminology
* Channel - A PubNub endpoint used to stream a specific type of data.
* Asset - Anything that can be traded on the supported exchanges above.
* Market - A pair of assets that can be traded for each other.
* Market Depth - see <a href="http://en.wikipedia.org/wiki/Order_book_(trading)#Book_depth" target="_blank">Order Book Depth</a>.

##Data Format
* Exchange - Uppercase string, e.g., `BTCE`.
* Asset - Three character uppercase string, e.g., `USD`.
* Market - Two tradable asset identifiers concatenated together, e.g., `BTCUSD`.  The second asset is the asset for which the market is priced in.
* Timestamps - All timestamps are represented as <a href="http://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601</a> formatted strings, e.g., `2014-04-20T10:57:55-07`.
* Numbers - Trailing zeroes are stripped to a minimum scale of 1, e.g., `123.0`.  Numbers will never be in exponential notation and there are no additional scale restrictions placed on original data received by an exchange.

##Service Architecture
The backend is a distributed <a href="http://storm.incubator.apache.org/" target="_blank">Storm Cluster</a> deployed to AWS EC2.  Each market resource, e.g., `ticker.KRAKEN.BTCUSD`, has a dedicated thread that repeatedly polls its respective exchange service API. Exchange data requests are set to poll as frequent as possible while respecting exchange rate limits and to prevent retrieval of duplicate cached data. If the exchange provides neither piece of information, each resource is polled for at most once per five seconds. The data is then normalized to a common data model and published to PubNub.


##Temporary Limitations
The following limitations can be easily removed with proper funding.  If you would like to see this service scale please donate below.

*  Only 20 clients (unique ip addressses) can connect per day because we are using <a href="http://www.pubnub.com/pricing/" target="_blank">PubNub's free service</a>.
*  Only 30 bid and ask orders in total are included in the Market Depth data because of the 1.7K message size limit under PubNub's free service.  This is increased to 7.2K under their paid service.
*  In an effort to reduce wasted network traffic, only the following assets are supported for Market Depth data.  However, all assets offered by an exchange are supported for Ticker data.
  * USD, EUR, GBP, HKD, CNY, AUD, CHF, SEK, DKK, SGD, NOK, RUR, KRW, CAD, JPY, GHS, BTC, LTC, NMC, NVC, PPC, FTC, TRC, WDC, XPM, DVC, DGC, UTC, XDG, XRP, XVN.

##Contact
marketstem@gmail.com

<br />
<a class="coinbase-button" data-code="9f31b6187d1d81f032ae8db6e123ca81" data-button-style="donation_large" data-custom="MarketStem" href="https://coinbase.com/checkouts/9f31b6187d1d81f032ae8db6e123ca81">Donate Bitcoins</a><script src="https://coinbase.com/assets/button.js" type="text/javascript"></script>

# Group Market Data
Each section below represents a PubNub channel that is available for subscription.  All data objects are returned in a json array.  An effort is made to include multiple objects in a single message if the corresponding exchange offers retrieval of multiple objects in a single call.
# ticker [/ticker]
## Subscribe to tickers for all markets on all exchanges. [GET]
#####Ticker Fields
* `exchange`
* `market`
* `last`  The last trades price in the market.
* `bid`  The best bid price.
* `ask`  The best ask price.
* `high`  The highest trade price in the last 24 hours.
* `low`  The lowest trade price in the last 24 hours.
* `volume`  The volume traded in the last 24 hours, denominated in the trade asset.
* `timestamp`  If not provided by the exchange it reflects the time initially received by our backend.

+ Response 200 (application/json)

        [
           {
              "exchange":"KRAKEN",
              "market":"LTCUSD",
              "last":12.07608,
              "bid":6.001,
              "ask":12.50482,
              "high":12.65,
              "low":12.07608,
              "volume":5.24895304,
              "timestamp":"2014-04-23T21:16:45-07"
           }
        ]

# ticker.EXCHANGE [/ticker.{EXCHANGE}]
## Subscribe to tickers for all markets on a specified EXCHANGE. [GET]
#####Ticker Fields
* `exchange`
* `market`
* `last`  The last trades price in the market.
* `bid`  The best bid price.
* `ask`  The best ask price.
* `high`  The highest trade price in the last 24 hours.
* `low`  The lowest trade price in the last 24 hours.
* `volume`  The volume traded in the last 24 hours, denominated in the trade asset.
* `timestamp`  If not provided by the exchange it reflects the time initially received by our backend.
+ Parameters
    + EXCHANGE (required, string, `KRAKEN`) ... Exchange specific ticker channel.  The exchange name must be UPPERCASE.
+ Response 200 (application/json)

        [
           {
              "exchange":"KRAKEN",
              "market":"LTCUSD",
              "last":12.07608,
              "bid":6.001,
              "ask":12.50482,
              "high":12.65,
              "low":12.07608,
              "volume":5.24895304,
              "timestamp":"2014-04-23T21:16:45-07"
           }
        ]

# depth [/depth]
## Subscribe to market depth data for all markets on all exchanges. [GET]
#####Market Depth Fields
* `exchange`
* `market`
* `bids`  Open bid limit orders sorted from highest to lowest price.
* `asks`  Open ask limit orders sorted from lowest to highest price.
        * Limit orders are formatted as `[price, volume]`.

  **Note:**  `bids` and `asks` are currently limited to 15 orders each because of the 1.7K message size constraint for PubNub's free service.  This can be increased if a switch is made to PubNub's paid service which has a message limit of 7.2k.

+ Response 200 (application/json)

        [
           {
              "bids":[
                 [
                    480.6,
                    480.6
                 ],
                 ...
                 [
                    419.8,
                    419.8
                 ]
              ],
              "asks":[
                 [
                    501.371,
                    501.371
                 ],
                 ...
                 [
                    692.32,
                    692.32
                 ]
              ],
              "exchange":"JUSTCOIN",
              "market":"BTCUSD"
           }
        ]

# depth.EXCHANGE [/depth.{EXCHANGE}]
## Subscribe to market depth data for all markets on a specified EXCHANGE. [GET]
#####Market Depth Fields
* `exchange`
* `market`
* `bids`  Open bid limit orders sorted from highest to lowest price.
* `asks`  Open ask limit orders sorted from lowest to highest price.
        * Limit orders are formatted as `[price, volume]`.

  **Note:**  `bids` and `asks` are currently limited to 15 orders each because of the 1.7K message size constraint for PubNub's free service.  This can be increased if a switch is made to PubNub's paid service which has a message limit of 7.2k.

+ Parameters
    + EXCHANGE (required, string, `JUSTCOIN`) ... Exchange specific market depth channel.  The exchange name must be UPPERCASE.

+ Response 200 (application/json)

        [
           {
              "bids":[
                 [
                    480.6,
                    480.6
                 ],
                 ...
                 [
                    419.8,
                    419.8
                 ]
              ],
              "asks":[
                 [
                    501.371,
                    501.371
                 ],
                 ...
                 [
                    692.32,
                    692.32
                 ]
              ],
              "exchange":"JUSTCOIN",
              "market":"BTCUSD"
           }
        ]

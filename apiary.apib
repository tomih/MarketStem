FORMAT: 1A
HOST: wss://pubsub.pubnub.com//sub-c-76747cdc-d33a-11e3-8068-02ee2ddab7fe/

# marketstem
MarketStem joins market data from several digital asset exchanges into one convenient streaming API.

##Supported Exchanges
<a href="https://anxpro.com/" target="_blank">ANXPRO</a>,
<a href="https://www.bitstamp.net/" target="_blank">BITSTAMP</a>,
<a href="https://www.bitfinex.com/" target="_blank">BITFINEX</a>,
<a href="https://btc-e.com/" target="_blank">BTCE</a>,
<a href="https://vip.btcchina.com/" target="_blank">BTCHINA</a>,
<a href="https://bter.com/" target="_blank">BTER</a>,
<a href="https://campbx.com/" target="_blank">CAMPBX</a>,
<a href="https://cex.io/" target="_blank">CEXIO</a>,
<a href="https://coinbase.com/" target="_blank">COINBASE</a>,
<a href="https://crypto-trade.com/" target="_blank">CRYPTOTRADE</a>,
<a href="https://justcoin.com/" target="_blank">JUSTCOIN</a>,
<a href="https://www.kraken.com/" target="_blank">KRAKEN</a>,
<a href="https://www.vaultofsatoshi.com/" target="_blank">VAULTOFSATOSHI</a>

If you would like to see an additional exchange added you can add a client implementation to the open source project <a href="https://github.com/timmolter/XChange" target="_blank">XChange</a> or put up a <a href="http://xeiam.com/bounties" target="_blank">bounty</a> to have it implemented.
##Connecting
This is a streaming web-socket API hosted by PubNub.  For detailed documentation about how to connect with one of their many client libraries please <a href="http://www.pubnub.com/developers" target="_blank">visit PubNub</a>.  Or try out the <a href="http://www.pubnub.com/console/?channel=ticker&origin=pubsub.pubnub.com&sub=sub-c-76747cdc-d33a-11e3-8068-02ee2ddab7fe&pub=&cipher=&ssl=false" target="_blank">dev console</a> to quickly visualize the live data.

 **PubNub Subscription Key:** `sub-c-76747cdc-d33a-11e3-8068-02ee2ddab7fe`

##Terminology
* Channel - A PubNub endpoint used to stream a specific type of data, i.e., `ticker.BITSTAMP` streams all tickers for the exchange BITSTAMP.
* Asset - Anything that can be traded on the supported exchanges above.
* Market - A pair of assets that can be traded for each other.  The first asset is considered the trade asset and the second is the price asset.
* Market Depth - See <a href="http://en.wikipedia.org/wiki/Order_book_(trading)#Book_depth" target="_blank">Order Book Depth</a>.

##Data Format
* Exchange - Uppercase string, e.g., `BTCE`.
* Asset - Three character uppercase string, e.g., `USD`.
* Market - Two tradable asset identifiers concatenated together, e.g., `BTCUSD`.  The second asset is the asset for which the market is priced in.
* Timestamps - Represented as <a href="http://en.wikipedia.org/wiki/ISO_8601" target="_blank">ISO 8601</a> formatted strings, e.g., `2014-05-04T23:31:26Z`.
* Numbers - See <a href="http://docs.oracle.com/javase/8/docs/api/java/math/BigDecimal.html#toPlainString" target="_blank">Java's BigDecimal plain string format</a>.

##Service Architecture
The backend consists of distributed network of failover nodes deployed to AWS EC2.  Nodes consist of a collection of services that are each responsible for their own resource, i.e., all tickers for the exchange Kraken`ticker.KRAKEN`. Failover is handled on a resource level. If a resource fails to check in for two minutes an identitical resource service from another node will take over.  Each resource service repeatedly polls its respective exchange-service. By default, each resource is limited to poll at most once every five seconds (can be increased if needed), i.e., all tickers will be collected from Kraken every five seconds.  The rate of polling is further limited by individual exchange service rate-limits or by the duration that data is cached by the respective exchange service. Once the market data is retrieved it is then normalized to a common data model and published to PubNub.


##Temporary Limitations
The following limitations can be easily removed with proper funding.  If you would like to see this service scale please donate below.

*  Only 100 clients (unique ip addressses) can connect per day because we are using <a href="http://www.pubnub.com/pricing/" target="_blank">PubNub's Go Cloud Basic Service</a>.
*  Only 30 bid and ask orders in total are included in the Market Depth data because of the 1.7K message size limit under PubNub's basic service.  This can be increased to 7.2K.
*  In an effort to reduce wasted network traffic, only the following assets are supported for Market Depth data.  However, all assets offered by an exchange are supported for Ticker data.
  * USD, EUR, GBP, HKD, CNY, AUD, CHF, SEK, DKK, SGD, NOK, RUR, KRW, CAD, JPY, GHS, BTC, LTC, NMC, NVC, PPC, FTC, TRC, WDC, XPM, DVC, DGC, UTC, XDG, XRP, XVN.

##Contact
marketstem@gmail.com

<a href="https://onename.io/marketstem" target="_blank">1EqUnmgUHWHo9kMQMLPht8KcvFj7qzXUtJ</a>

<a class="coinbase-button" data-code="efb37915d8c675b893e6094cdacb5e37" data-button-style="donation_large" data-custom="MarketStemDonation" href="https://coinbase.com/checkouts/efb37915d8c675b893e6094cdacb5e37">Donate Bitcoins</a><script src="https://coinbase.com/assets/button.js" type="text/javascript"></script>
# Group Market Data
Each section below represents a PubNub channel that is available for subscription.  All data objects are returned within a json array.  An effort is made to include multiple objects in a single message if the corresponding exchange offers retrieval of multiple objects in a single call.
# ticker [/ticker]
## Subscribe to tickers for all markets on all exchanges. [GET]
#####Ticker Fields
* `exchange`
* `market`
* `last`  The price of the most recent trade.
* `bid`  The best bid price.
* `ask`  The best ask price.
* `high`  The highest trade price in the last 24 hours.
* `low`  The lowest trade price in the last 24 hours.
* `volume`  The volume traded in the last 24 hours, denominated in the trade asset.
* `timestamp`  If not provided by the exchange it reflects the time initially received by our backend service.

+ Response 200 (application/json)

        [
           {
              "market":"PPCBTC",
              "volume":"41.49106",
              "high":"0.00486",
              "last":"0.00479",
              "low":"0.00471",
              "ask":"0.00482",
              "exchange":"BTCE",
              "bid":"0.00479",
              "timestamp":"2014-05-04T23:31:26Z"
           }
        ]

# ticker.EXCHANGE [/ticker.{EXCHANGE}]
## Subscribe to tickers for all markets on a specified EXCHANGE. [GET]
#####Ticker Fields
* `exchange`
* `market`
* `last`  The price of the most recent trade.
* `bid`  The best bid price.
* `ask`  The best ask price.
* `high`  The highest trade price in the last 24 hours.
* `low`  The lowest trade price in the last 24 hours.
* `volume`  The volume traded in the last 24 hours, denominated in the trade asset.
* `timestamp`  If not provided by the exchange it reflects the time initially received by our backend service.
+ Parameters
    + EXCHANGE (required, string, `BTCE`) ... Exchange specific ticker channel.  The exchange name must be UPPERCASE.
+ Response 200 (application/json)

        [
           {
              "market":"PPCBTC",
              "volume":"41.49106",
              "high":"0.00486",
              "last":"0.00479",
              "low":"0.00471",
              "ask":"0.00482",
              "exchange":"BTCE",
              "bid":"0.00479",
              "timestamp":"2014-05-04T23:31:26Z"
           }
        ]

# depth [/depth]
## Subscribe to market depth data for all markets on all exchanges. [GET]
#####Market Depth Fields
* `exchange`
* `market`
* `timestamp` Reflects the time initially received by our backend service.
* `bids`  Open bid limit orders sorted from highest to lowest price.
* `asks`  Open ask limit orders sorted from lowest to highest price.
        * Limit orders are formatted as `["price", "trade amount"]`.

  **Note:**  `bids` and `asks` are currently limited to 15 orders each because of the 1.7K message size constraint for PubNub's basic service.  This can be increased to 7.2k for an additional cost.

+ Response 200 (application/json)

        [
           {
              "bids":[
                 [
                    "480.6",
                    "480.6"
                 ],
                 ...
                 [
                    "419.8",
                    "419.8"
                 ]
              ],
              "asks":[
                 [
                    "501.371",
                    "501.371"
                 ],
                 ...
                 [
                    "692.32",
                    "692.32"
                 ]
              ],
              "exchange":"JUSTCOIN",
              "market":"BTCUSD",
              "timestamp":"2014-04-23T21:16:45Z"
           }
        ]

# depth.EXCHANGE [/depth.{EXCHANGE}]
## Subscribe to market depth data for all markets on a specified EXCHANGE. [GET]
#####Market Depth Fields
* `exchange`
* `market`
* `timestamp` Reflects the time initially received by our backend service.
* `bids`  Open bid limit orders sorted from highest to lowest price.
* `asks`  Open ask limit orders sorted from lowest to highest price.
        * Limit orders are formatted as `["price", "trade amount"]`.

  **Note:**  `bids` and `asks` are currently limited to 15 orders each because of the 1.7K message size constraint for PubNub's basic service.  This can be increased to 7.2k for an additional cost.

+ Parameters
    + EXCHANGE (required, string, `JUSTCOIN`) ... Exchange specific market depth channel.  The exchange name must be UPPERCASE.

+ Response 200 (application/json)

        [
           {
              "bids":[
                 [
                    "480.6",
                    "480.6"
                 ],
                 ...
                 [
                    "419.8",
                    "419.8"
                 ]
              ],
              "asks":[
                 [
                    "501.371",
                    "501.371"
                 ],
                 ...
                 [
                    "692.32",
                    "692.32"
                 ]
              ],
              "exchange":"JUSTCOIN",
              "market":"BTCUSD",
              "timestamp":"2014-04-23T21:16:45Z"
           }
        ]
